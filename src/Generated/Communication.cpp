// This file is automatically generated by the Generate.py script.
#include "Berry.hpp"
extern "C"
{
#include "be_constobj.h"
#include "be_mapping.h"
}
using namespace Xila_Namespace;
using namespace Communication_Types;

// - Functions

// - - Constructors
void * Berry_IP_Address_Class_Initialize_5626FB36_7175_4AAA_854B_4B9F3B6F2A49(bvm* V)
{
void* Pointer = be_malloc(V, sizeof(Communication_Types::IP_Address_Class));
return new (Pointer) Communication_Types::IP_Address_Class(); 
}
BE_FUNC_CTYPE_DECLARE(Berry_IP_Address_Class_Initialize_5626FB36_7175_4AAA_854B_4B9F3B6F2A49, "+_p", "@");

void * Berry_IP_Address_Class_Initialize_3EAAB41E_BDDA_484E_803D_608FB7CEB783(bvm* V, bool A_0)
{
void* Pointer = be_malloc(V, sizeof(Communication_Types::IP_Address_Class));
return new (Pointer) Communication_Types::IP_Address_Class(A_0); 
}
BE_FUNC_CTYPE_DECLARE(Berry_IP_Address_Class_Initialize_3EAAB41E_BDDA_484E_803D_608FB7CEB783, "+_p", "@b");

void * Berry_IP_Address_Class_Initialize_4D0FBD12_69D9_4583_877A_0613D5E3A9AD(bvm* V, int A_0)
{
void* Pointer = be_malloc(V, sizeof(Communication_Types::IP_Address_Class));
return new (Pointer) Communication_Types::IP_Address_Class((unsigned int)A_0); 
}
BE_FUNC_CTYPE_DECLARE(Berry_IP_Address_Class_Initialize_4D0FBD12_69D9_4583_877A_0613D5E3A9AD, "+_p", "@i");

void * Berry_IP_Address_Class_Initialize_24A3A2B6_5F83_4E26_8CA5_1D0C4F0B3391(bvm* V, const unsigned char* A_0, bool A_1 = true)
{
void* Pointer = be_malloc(V, sizeof(Communication_Types::IP_Address_Class));
return new (Pointer) Communication_Types::IP_Address_Class(A_0, A_1); 
}
BE_FUNC_CTYPE_DECLARE(Berry_IP_Address_Class_Initialize_24A3A2B6_5F83_4E26_8CA5_1D0C4F0B3391, "+_p", "@s[b");

void * Berry_IP_Address_Class_Initialize_7E74BAA7_4388_4CA8_A8DB_19F80893CBD2(bvm* V, int A_0, int A_1, int A_2, int A_3)
{
void* Pointer = be_malloc(V, sizeof(Communication_Types::IP_Address_Class));
return new (Pointer) Communication_Types::IP_Address_Class((unsigned char)A_0, (unsigned char)A_1, (unsigned char)A_2, (unsigned char)A_3); 
}
BE_FUNC_CTYPE_DECLARE(Berry_IP_Address_Class_Initialize_7E74BAA7_4388_4CA8_A8DB_19F80893CBD2, "+_p", "@iiii");

void * Berry_IP_Address_Class_Initialize_D5981EE9_8F04_4917_89F0_A9E372A04DDE(bvm* V)
{
void* Pointer = be_malloc(V, sizeof(Communication_Types::IP_Address_Class));
return new (Pointer) Communication_Types::IP_Address_Class(); 
}
BE_FUNC_CTYPE_DECLARE(Berry_IP_Address_Class_Initialize_D5981EE9_8F04_4917_89F0_A9E372A04DDE, "+_p", "@");

void * Berry_IP_Address_Class_Initialize_C3D8AFD3_3A30_465C_8FB9_C1C56E1A4880(bvm* V)
{
void* Pointer = be_malloc(V, sizeof(Communication_Types::IP_Address_Class));
return new (Pointer) Communication_Types::IP_Address_Class(); 
}
BE_FUNC_CTYPE_DECLARE(Berry_IP_Address_Class_Initialize_C3D8AFD3_3A30_465C_8FB9_C1C56E1A4880, "+_p", "@");


// - - Destructors
void Berry_IP_Address_Class_Deinitialize_F6EDDC73_4F67_43FF_8135_BCA938CF3674(bvm* V, Xila_Namespace::Communication_Types::IP_Address_Class* I)
{
if (!I) { return; }
I->~IP_Address_Class();
be_free(V, I, sizeof(Communication_Types::IP_Address_Class));
}
BE_FUNC_CTYPE_DECLARE(Berry_IP_Address_Class_Deinitialize_F6EDDC73_4F67_43FF_8135_BCA938CF3674, "", "@.");


// - - Functions
const char* Berry_IP_Address_Class_To_A0E95CFE_7CB2_40A8_A9F9_1BA89E0A4C31(bvm* V, Xila_Namespace::Communication_Types::IP_Address_Class* I)
{
String_Type S_0;
S_0.Set_Buffer((char*)Berry_Class::Get_Instance(V)->Buffer, sizeof(Berry_Class::Buffer));
I->To(S_0); 
return S_0;
}
BE_FUNC_CTYPE_DECLARE(Berry_IP_Address_Class_To_A0E95CFE_7CB2_40A8_A9F9_1BA89E0A4C31, "s", "@.");

bool Berry_IP_Address_Class_Is_IP_v4_1B455BEE_BA69_467B_84CE_C80478CFABD3(Xila_Namespace::Communication_Types::IP_Address_Class* I)
{
return I->Is_IP_v4(); 
}
BE_FUNC_CTYPE_DECLARE(Berry_IP_Address_Class_Is_IP_v4_1B455BEE_BA69_467B_84CE_C80478CFABD3, "b", ".");

void Berry_IP_Address_Class_Set_IP_Version_1267637B_82F3_487E_9739_D09BF34A2A95(Xila_Namespace::Communication_Types::IP_Address_Class* I, bool A_0)
{
return I->Set_IP_Version(A_0); 
}
BE_FUNC_CTYPE_DECLARE(Berry_IP_Address_Class_Set_IP_Version_1267637B_82F3_487E_9739_D09BF34A2A95, "", ".b");

// - - Operators
bool Berry_IP_Address_Class_Operator_76ADFC3F_B877_49D4_B87D_4547E5390084(Xila_Namespace::Communication_Types::IP_Address_Class* I, Xila_Namespace::Communication_Types::IP_Address_Class* A_0)
{
return *I == *A_0;
}
BE_FUNC_CTYPE_DECLARE(Berry_IP_Address_Class_Operator_76ADFC3F_B877_49D4_B87D_4547E5390084, "b", "..")

bool Berry_IP_Address_Class_Operator_73E0F781_CB45_48F8_9948_C6FAFCA712E5(Xila_Namespace::Communication_Types::IP_Address_Class* I, Xila_Namespace::Communication_Types::IP_Address_Class* A_0)
{
return *I == *A_0;
}
BE_FUNC_CTYPE_DECLARE(Berry_IP_Address_Class_Operator_73E0F781_CB45_48F8_9948_C6FAFCA712E5, "b", "..")


// - Berry declaration
/* @const_object_info_begin
class Berry_IP_Address_Type(scope:global, name:IP_Address_Type)
{
	_p, var
	init, ctype_func(Berry_IP_Address_Class_Initialize_5626FB36_7175_4AAA_854B_4B9F3B6F2A49)
	init, ctype_func(Berry_IP_Address_Class_Initialize_3EAAB41E_BDDA_484E_803D_608FB7CEB783)
	init, ctype_func(Berry_IP_Address_Class_Initialize_4D0FBD12_69D9_4583_877A_0613D5E3A9AD)
	init, ctype_func(Berry_IP_Address_Class_Initialize_24A3A2B6_5F83_4E26_8CA5_1D0C4F0B3391)
	init, ctype_func(Berry_IP_Address_Class_Initialize_7E74BAA7_4388_4CA8_A8DB_19F80893CBD2)
	init, ctype_func(Berry_IP_Address_Class_Initialize_D5981EE9_8F04_4917_89F0_A9E372A04DDE)
	init, ctype_func(Berry_IP_Address_Class_Initialize_C3D8AFD3_3A30_465C_8FB9_C1C56E1A4880)
	deinit, ctype_func(Berry_IP_Address_Class_Deinitialize_F6EDDC73_4F67_43FF_8135_BCA938CF3674)
	To, ctype_func(Berry_IP_Address_Class_To_A0E95CFE_7CB2_40A8_A9F9_1BA89E0A4C31)
	Is_IP_v4, ctype_func(Berry_IP_Address_Class_Is_IP_v4_1B455BEE_BA69_467B_84CE_C80478CFABD3)
	Set_IP_Version, ctype_func(Berry_IP_Address_Class_Set_IP_Version_1267637B_82F3_487E_9739_D09BF34A2A95)
	==, ctype_func(Berry_IP_Address_Class_Operator_76ADFC3F_B877_49D4_B87D_4547E5390084)
	==, ctype_func(Berry_IP_Address_Class_Operator_73E0F781_CB45_48F8_9948_C6FAFCA712E5)

}
@const_object_info_end */


extern "C"
{
	#include "../generate/be_fixed_Berry_IP_Address_Type.h"
}
// - Functions

// - - Constructors
void * Berry_HTTPS_Client_Class_Initialize_016AD43E_A779_428C_B1E0_BDDBC1FA73AB(bvm* V)
{
void* Pointer = be_malloc(V, sizeof(Communication_Types::HTTPS_Client_Class));
return new (Pointer) Communication_Types::HTTPS_Client_Class(); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Initialize_016AD43E_A779_428C_B1E0_BDDBC1FA73AB, "+_p", "@");


// - - Destructors
void Berry_HTTPS_Client_Class_Deinitialize_AD495AAF_06C9_4488_9841_6A4D660F9B75(bvm* V, Xila_Namespace::Communication_Types::HTTPS_Client_Class* I)
{
if (!I) { return; }
I->~HTTPS_Client_Class();
be_free(V, I, sizeof(Communication_Types::HTTPS_Client_Class));
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Deinitialize_AD495AAF_06C9_4488_9841_6A4D660F9B75, "", "@.");


// - - Functions
int Berry_HTTPS_Client_Class_Begin_988126ED_F456_4C57_AEBC_CC93F4C95EA8(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I, ::Xila_Namespace::Communication_Types::WiFi_Client_Class* A_0, const char* A_1, int A_2, const char* A_3 = __null, bool A_4 = false)
{
return (int)I->Begin(*A_0, A_1, (short unsigned int)A_2, A_3, A_4); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Begin_988126ED_F456_4C57_AEBC_CC93F4C95EA8, "i", "..si[sb");

void Berry_HTTPS_Client_Class_End_3A35BAC3_1C2D_49E7_80E3_7EAF778E0295(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I)
{
return I->End(); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_End_3A35BAC3_1C2D_49E7_80E3_7EAF778E0295, "", ".");

bool Berry_HTTPS_Client_Class_Connected_F2E0DD02_BF78_40F4_8E33_00DCA430BE6F(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I)
{
return I->Connected(); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Connected_F2E0DD02_BF78_40F4_8E33_00DCA430BE6F, "b", ".");

int Berry_HTTPS_Client_Class_Get_F329EE5C_CC0C_4418_A498_FD67B430FF21(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I)
{
return (int)I->Get(); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Get_F329EE5C_CC0C_4418_A498_FD67B430FF21, "i", ".");

int Berry_HTTPS_Client_Class_Patch_F8F92680_DD9A_4072_8B3A_246187957BF9(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I, const char* A_0)
{
return (int)I->Patch(A_0); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Patch_F8F92680_DD9A_4072_8B3A_246187957BF9, "i", ".s");

int Berry_HTTPS_Client_Class_Post_35A18130_C734_4FC2_ABC8_A5B175407335(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I, const char* A_0)
{
return (int)I->Post(A_0); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Post_35A18130_C734_4FC2_ABC8_A5B175407335, "i", ".s");

int Berry_HTTPS_Client_Class_Put_D9CD0523_FA1A_4BBD_8961_614C5BDAC46B(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I, const char* A_0)
{
return (int)I->Put(A_0); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Put_D9CD0523_FA1A_4BBD_8961_614C5BDAC46B, "i", ".s");

int Berry_HTTPS_Client_Class_Send_Request_2801382F_63E4_4978_B207_AE250C5BF807(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I, const char* A_0, const char* A_1 = __null)
{
return (int)I->Send_Request(A_0, A_1); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Send_Request_2801382F_63E4_4978_B207_AE250C5BF807, "i", ".s[s");

void Berry_HTTPS_Client_Class_Add_Header_74CAB7DA_32F9_4F7B_9B03_3A473F2AE335(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I, const char* A_0, const char* A_1, bool A_2 = false, bool A_3 = true)
{
return I->Add_Header(A_0, A_1, A_2, A_3); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Add_Header_74CAB7DA_32F9_4F7B_9B03_3A473F2AE335, "", ".ss[bb");

bool Berry_HTTPS_Client_Class_Has_Header_30AFD812_3082_4F10_B321_B873329A470F(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I, const char* A_0)
{
return I->Has_Header(A_0); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Has_Header_30AFD812_3082_4F10_B321_B873329A470F, "b", ".s");

void Berry_HTTPS_Client_Class_Use_HTTP_1_0_68B9C13E_323A_4BE6_ACA5_65F47E6ECC0B(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I, bool A_0)
{
return I->Use_HTTP_1_0(A_0); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Use_HTTP_1_0_68B9C13E_323A_4BE6_ACA5_65F47E6ECC0B, "", ".b");

void Berry_HTTPS_Client_Class_Reset_Cookie_Jar_8830E94D_F516_44A8_AE66_D0C45789FC2B(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I)
{
return I->Reset_Cookie_Jar(); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Reset_Cookie_Jar_8830E94D_F516_44A8_AE66_D0C45789FC2B, "", ".");

void Berry_HTTPS_Client_Class_Clear_All_Cookies_BCCEA4F9_43A7_4D21_97B3_FEB8197B3A45(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I)
{
return I->Clear_All_Cookies(); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Clear_All_Cookies_BCCEA4F9_43A7_4D21_97B3_FEB8197B3A45, "", ".");

void Berry_HTTPS_Client_Class_Set_Reuse_F1D520EB_C2D3_401E_B5F6_43962CFFE9AD(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I, bool A_0)
{
return I->Set_Reuse(A_0); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Set_Reuse_F1D520EB_C2D3_401E_B5F6_43962CFFE9AD, "", ".b");

void Berry_HTTPS_Client_Class_Set_User_Agent_9B34E589_8683_4D90_9929_0C60B9C9174B(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I, const char* A_0)
{
return I->Set_User_Agent(A_0); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Set_User_Agent_9B34E589_8683_4D90_9929_0C60B9C9174B, "", ".s");

void Berry_HTTPS_Client_Class_Set_Authorization_6C8D8ABC_4CCD_487E_B11D_3C5B7E665580(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I, const char* A_0, const char* A_1 = __null)
{
return I->Set_Authorization(A_0, A_1); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Set_Authorization_6C8D8ABC_4CCD_487E_B11D_3C5B7E665580, "", ".s[s");

void Berry_HTTPS_Client_Class_Set_Authorization_Type_AE10C4A9_BF23_4D72_82A0_DB9571C50BE2(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I, const char* A_0)
{
return I->Set_Authorization_Type(A_0); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Set_Authorization_Type_AE10C4A9_BF23_4D72_82A0_DB9571C50BE2, "", ".s");

void Berry_HTTPS_Client_Class_Set_Connect_Timeout_6384F538_8172_4008_B906_F2BB1B649EB5(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I, int A_0)
{
return I->Set_Connect_Timeout((unsigned int)A_0); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Set_Connect_Timeout_6384F538_8172_4008_B906_F2BB1B649EB5, "", ".i");

void Berry_HTTPS_Client_Class_Set_Timeout_30B31D2B_B379_4820_A2E0_019EB123811C(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I, int A_0)
{
return I->Set_Timeout((unsigned int)A_0); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Set_Timeout_30B31D2B_B379_4820_A2E0_019EB123811C, "", ".i");

void Berry_HTTPS_Client_Class_Set_Follow_Redirects_55E2BE5C_CA09_4909_8BDE_B398221D65EF(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I, bool A_0, bool A_1 = false)
{
return I->Set_Follow_Redirects(A_0, A_1); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Set_Follow_Redirects_55E2BE5C_CA09_4909_8BDE_B398221D65EF, "", ".b[b");

void Berry_HTTPS_Client_Class_Set_Redirect_Limit_EADDBC0D_0F0C_4D25_8E90_66A8BE82547E(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I, int A_0)
{
return I->Set_Redirect_Limit((short unsigned int)A_0); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Set_Redirect_Limit_EADDBC0D_0F0C_4D25_8E90_66A8BE82547E, "", ".i");

int Berry_HTTPS_Client_Class_Set_URL_E9AD40DC_CF08_41D6_8501_219325C180D7(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I, const char* A_0)
{
return (int)I->Set_URL(A_0); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Set_URL_E9AD40DC_CF08_41D6_8501_219325C180D7, "i", ".s");

const char* Berry_HTTPS_Client_Class_Get_Header_B7BA986C_892F_4230_BFD6_079AE9910CED(bvm* V, Xila_Namespace::Communication_Types::HTTPS_Client_Class* I, const char* A_1)
{
String_Type S_0;
S_0.Set_Buffer((char*)Berry_Class::Get_Instance(V)->Buffer, sizeof(Berry_Class::Buffer));
I->Get_Header(S_0, A_1); 
return S_0;
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Get_Header_B7BA986C_892F_4230_BFD6_079AE9910CED, "s", "@.s");

const char* Berry_HTTPS_Client_Class_Get_Header_Name_F207856E_25D7_48BA_86A4_CB22218A5A93(bvm* V, Xila_Namespace::Communication_Types::HTTPS_Client_Class* I, int A_1)
{
String_Type S_0;
S_0.Set_Buffer((char*)Berry_Class::Get_Instance(V)->Buffer, sizeof(Berry_Class::Buffer));
I->Get_Header_Name(S_0, (unsigned int)A_1); 
return S_0;
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Get_Header_Name_F207856E_25D7_48BA_86A4_CB22218A5A93, "s", "@.i");

int Berry_HTTPS_Client_Class_Get_Header_Count_A14B298A_946D_4B13_B8CE_DC854D4B5215(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I)
{
return (int)I->Get_Header_Count(); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Get_Header_Count_A14B298A_946D_4B13_B8CE_DC854D4B5215, "i", ".");

int Berry_HTTPS_Client_Class_Get_Size_450A7BA1_D995_4F36_A9DA_D064A30F18ED(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I)
{
return (int)I->Get_Size(); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Get_Size_450A7BA1_D995_4F36_A9DA_D064A30F18ED, "i", ".");

const char* Berry_HTTPS_Client_Class_Get_Location_49A54AB6_5364_4D90_9A73_85D182869BF0(Xila_Namespace::Communication_Types::HTTPS_Client_Class* I)
{
return I->Get_Location(); 
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Get_Location_49A54AB6_5364_4D90_9A73_85D182869BF0, "s", ".");

const char* Berry_HTTPS_Client_Class_Get_String_6058E402_9600_47C3_8571_8C4527D372DF(bvm* V, Xila_Namespace::Communication_Types::HTTPS_Client_Class* I)
{
String_Type S_0;
S_0.Set_Buffer((char*)Berry_Class::Get_Instance(V)->Buffer, sizeof(Berry_Class::Buffer));
I->Get_String(S_0); 
return S_0;
}
BE_FUNC_CTYPE_DECLARE(Berry_HTTPS_Client_Class_Get_String_6058E402_9600_47C3_8571_8C4527D372DF, "s", "@.");

// - - Operators

// - Berry declaration
/* @const_object_info_begin
class Berry_HTTPS_Client_Type(scope:global, name:HTTPS_Client_Type)
{
	_p, var
	init, ctype_func(Berry_HTTPS_Client_Class_Initialize_016AD43E_A779_428C_B1E0_BDDBC1FA73AB)
	deinit, ctype_func(Berry_HTTPS_Client_Class_Deinitialize_AD495AAF_06C9_4488_9841_6A4D660F9B75)
	Begin, ctype_func(Berry_HTTPS_Client_Class_Begin_988126ED_F456_4C57_AEBC_CC93F4C95EA8)
	End, ctype_func(Berry_HTTPS_Client_Class_End_3A35BAC3_1C2D_49E7_80E3_7EAF778E0295)
	Connected, ctype_func(Berry_HTTPS_Client_Class_Connected_F2E0DD02_BF78_40F4_8E33_00DCA430BE6F)
	Get, ctype_func(Berry_HTTPS_Client_Class_Get_F329EE5C_CC0C_4418_A498_FD67B430FF21)
	Patch, ctype_func(Berry_HTTPS_Client_Class_Patch_F8F92680_DD9A_4072_8B3A_246187957BF9)
	Post, ctype_func(Berry_HTTPS_Client_Class_Post_35A18130_C734_4FC2_ABC8_A5B175407335)
	Put, ctype_func(Berry_HTTPS_Client_Class_Put_D9CD0523_FA1A_4BBD_8961_614C5BDAC46B)
	Send_Request, ctype_func(Berry_HTTPS_Client_Class_Send_Request_2801382F_63E4_4978_B207_AE250C5BF807)
	Add_Header, ctype_func(Berry_HTTPS_Client_Class_Add_Header_74CAB7DA_32F9_4F7B_9B03_3A473F2AE335)
	Has_Header, ctype_func(Berry_HTTPS_Client_Class_Has_Header_30AFD812_3082_4F10_B321_B873329A470F)
	Use_HTTP_1_0, ctype_func(Berry_HTTPS_Client_Class_Use_HTTP_1_0_68B9C13E_323A_4BE6_ACA5_65F47E6ECC0B)
	Reset_Cookie_Jar, ctype_func(Berry_HTTPS_Client_Class_Reset_Cookie_Jar_8830E94D_F516_44A8_AE66_D0C45789FC2B)
	Clear_All_Cookies, ctype_func(Berry_HTTPS_Client_Class_Clear_All_Cookies_BCCEA4F9_43A7_4D21_97B3_FEB8197B3A45)
	Set_Reuse, ctype_func(Berry_HTTPS_Client_Class_Set_Reuse_F1D520EB_C2D3_401E_B5F6_43962CFFE9AD)
	Set_User_Agent, ctype_func(Berry_HTTPS_Client_Class_Set_User_Agent_9B34E589_8683_4D90_9929_0C60B9C9174B)
	Set_Authorization, ctype_func(Berry_HTTPS_Client_Class_Set_Authorization_6C8D8ABC_4CCD_487E_B11D_3C5B7E665580)
	Set_Authorization_Type, ctype_func(Berry_HTTPS_Client_Class_Set_Authorization_Type_AE10C4A9_BF23_4D72_82A0_DB9571C50BE2)
	Set_Connect_Timeout, ctype_func(Berry_HTTPS_Client_Class_Set_Connect_Timeout_6384F538_8172_4008_B906_F2BB1B649EB5)
	Set_Timeout, ctype_func(Berry_HTTPS_Client_Class_Set_Timeout_30B31D2B_B379_4820_A2E0_019EB123811C)
	Set_Follow_Redirects, ctype_func(Berry_HTTPS_Client_Class_Set_Follow_Redirects_55E2BE5C_CA09_4909_8BDE_B398221D65EF)
	Set_Redirect_Limit, ctype_func(Berry_HTTPS_Client_Class_Set_Redirect_Limit_EADDBC0D_0F0C_4D25_8E90_66A8BE82547E)
	Set_URL, ctype_func(Berry_HTTPS_Client_Class_Set_URL_E9AD40DC_CF08_41D6_8501_219325C180D7)
	Get_Header, ctype_func(Berry_HTTPS_Client_Class_Get_Header_B7BA986C_892F_4230_BFD6_079AE9910CED)
	Get_Header_Name, ctype_func(Berry_HTTPS_Client_Class_Get_Header_Name_F207856E_25D7_48BA_86A4_CB22218A5A93)
	Get_Header_Count, ctype_func(Berry_HTTPS_Client_Class_Get_Header_Count_A14B298A_946D_4B13_B8CE_DC854D4B5215)
	Get_Size, ctype_func(Berry_HTTPS_Client_Class_Get_Size_450A7BA1_D995_4F36_A9DA_D064A30F18ED)
	Get_Location, ctype_func(Berry_HTTPS_Client_Class_Get_Location_49A54AB6_5364_4D90_9A73_85D182869BF0)
	Get_String, ctype_func(Berry_HTTPS_Client_Class_Get_String_6058E402_9600_47C3_8571_8C4527D372DF)

}
@const_object_info_end */


extern "C"
{
	#include "../generate/be_fixed_Berry_HTTPS_Client_Type.h"
}
// - Functions

// - - Constructors
void * Berry_WiFi_Client_Class_Initialize_A05A5517_71D0_463F_8DEA_A4E3DF5F2CCC(bvm* V)
{
void* Pointer = be_malloc(V, sizeof(Communication_Types::WiFi_Client_Class));
return new (Pointer) Communication_Types::WiFi_Client_Class(); 
}
BE_FUNC_CTYPE_DECLARE(Berry_WiFi_Client_Class_Initialize_A05A5517_71D0_463F_8DEA_A4E3DF5F2CCC, "+_p", "@");


// - - Destructors
void Berry_WiFi_Client_Class_Deinitialize_C011F7D5_2F69_4C74_A827_4B3F956BCD7A(bvm* V, Xila_Namespace::Communication_Types::WiFi_Client_Class* I)
{
if (!I) { return; }
I->~WiFi_Client_Class();
be_free(V, I, sizeof(Communication_Types::WiFi_Client_Class));
}
BE_FUNC_CTYPE_DECLARE(Berry_WiFi_Client_Class_Deinitialize_C011F7D5_2F69_4C74_A827_4B3F956BCD7A, "", "@.");


// - - Functions
int Berry_WiFi_Client_Class_Connect_47CD7C33_1519_49E5_A8C6_4B2488AF4730(Xila_Namespace::Communication_Types::WiFi_Client_Class* I, const char* A_0, int A_1, int A_2 = 30000)
{
return (int)I->Connect(A_0, (short unsigned int)A_1, (int)A_2); 
}
BE_FUNC_CTYPE_DECLARE(Berry_WiFi_Client_Class_Connect_47CD7C33_1519_49E5_A8C6_4B2488AF4730, "i", ".si[i");

void Berry_WiFi_Client_Class_Stop_8235CF00_0F49_4BFC_ADB5_3A835F0B4B6C(Xila_Namespace::Communication_Types::WiFi_Client_Class* I)
{
return I->Stop(); 
}
BE_FUNC_CTYPE_DECLARE(Berry_WiFi_Client_Class_Stop_8235CF00_0F49_4BFC_ADB5_3A835F0B4B6C, "", ".");

bool Berry_WiFi_Client_Class_Connected_F63FF722_66E3_4359_ADBD_0AEDE51AFCF5(Xila_Namespace::Communication_Types::WiFi_Client_Class* I)
{
return I->Connected(); 
}
BE_FUNC_CTYPE_DECLARE(Berry_WiFi_Client_Class_Connected_F63FF722_66E3_4359_ADBD_0AEDE51AFCF5, "b", ".");

const char* Berry_WiFi_Client_Class_Last_Error_BA33CA71_421C_4737_A856_1B985E1AEB71(bvm* V, Xila_Namespace::Communication_Types::WiFi_Client_Class* I)
{
String_Type S_0;
S_0.Set_Buffer((char*)Berry_Class::Get_Instance(V)->Buffer, sizeof(Berry_Class::Buffer));
I->Last_Error(S_0); 
return S_0;
}
BE_FUNC_CTYPE_DECLARE(Berry_WiFi_Client_Class_Last_Error_BA33CA71_421C_4737_A856_1B985E1AEB71, "s", "@.");

void Berry_WiFi_Client_Class_Set_Insecure_E0090CEB_6AD8_48B1_8902_4BC7C4DB84D8(Xila_Namespace::Communication_Types::WiFi_Client_Class* I)
{
return I->Set_Insecure(); 
}
BE_FUNC_CTYPE_DECLARE(Berry_WiFi_Client_Class_Set_Insecure_E0090CEB_6AD8_48B1_8902_4BC7C4DB84D8, "", ".");

void Berry_WiFi_Client_Class_Set_Handshake_Timeout_1265ED47_0342_4FAA_884B_C1884DF12792(Xila_Namespace::Communication_Types::WiFi_Client_Class* I, int A_0)
{
return I->Set_Handshake_Timeout((unsigned int)A_0); 
}
BE_FUNC_CTYPE_DECLARE(Berry_WiFi_Client_Class_Set_Handshake_Timeout_1265ED47_0342_4FAA_884B_C1884DF12792, "", ".i");

void Berry_WiFi_Client_Class_Set_Timeout_C174F9C5_0DB1_49B1_A6E9_523A8AAF2C63(Xila_Namespace::Communication_Types::WiFi_Client_Class* I, int A_0)
{
return I->Set_Timeout((unsigned int)A_0); 
}
BE_FUNC_CTYPE_DECLARE(Berry_WiFi_Client_Class_Set_Timeout_C174F9C5_0DB1_49B1_A6E9_523A8AAF2C63, "", ".i");

int Berry_WiFi_Client_Class_Available_23838321_8ABA_4B51_AC43_6F7D3EAB81EE(Xila_Namespace::Communication_Types::WiFi_Client_Class* I)
{
return (int)I->Available(); 
}
BE_FUNC_CTYPE_DECLARE(Berry_WiFi_Client_Class_Available_23838321_8ABA_4B51_AC43_6F7D3EAB81EE, "i", ".");

int Berry_WiFi_Client_Class_Peek_97508EEA_44C9_4524_AD43_4B0B52D1B605(Xila_Namespace::Communication_Types::WiFi_Client_Class* I)
{
return (int)I->Peek(); 
}
BE_FUNC_CTYPE_DECLARE(Berry_WiFi_Client_Class_Peek_97508EEA_44C9_4524_AD43_4B0B52D1B605, "i", ".");

int Berry_WiFi_Client_Class_Read_DF8DE39F_E0E8_4AD0_A716_A62307F664AB(Xila_Namespace::Communication_Types::WiFi_Client_Class* I)
{
return (int)I->Read(); 
}
BE_FUNC_CTYPE_DECLARE(Berry_WiFi_Client_Class_Read_DF8DE39F_E0E8_4AD0_A716_A62307F664AB, "i", ".");

const unsigned char* Berry_WiFi_Client_Class_Read_Bytes_B9437A56_4C24_4C19_948F_143F61342342(bvm* V, Xila_Namespace::Communication_Types::WiFi_Client_Class* I, int A_1)
{
unsigned char* S_0 = (unsigned char*)Berry_Class::Get_Instance(V)->Buffer;
I->Read_Bytes(S_0, (A_1 > sizeof(Berry_Class::Buffer)) ? sizeof(Berry_Class::Buffer) : A_1); 
return S_0;
}
BE_FUNC_CTYPE_DECLARE(Berry_WiFi_Client_Class_Read_Bytes_B9437A56_4C24_4C19_948F_143F61342342, "s", "@.i");

const char* Berry_WiFi_Client_Class_Read_String_57F0BA93_F289_4952_A464_34AA57B5C6FD(bvm* V, Xila_Namespace::Communication_Types::WiFi_Client_Class* I)
{
String_Type S_0;
S_0.Set_Buffer((char*)Berry_Class::Get_Instance(V)->Buffer, sizeof(Berry_Class::Buffer));
I->Read_String(S_0); 
return S_0;
}
BE_FUNC_CTYPE_DECLARE(Berry_WiFi_Client_Class_Read_String_57F0BA93_F289_4952_A464_34AA57B5C6FD, "s", "@.");

void Berry_WiFi_Client_Class_Flush_A6E0711F_6250_40BD_90F5_07B740A5BD9E(Xila_Namespace::Communication_Types::WiFi_Client_Class* I)
{
return I->Flush(); 
}
BE_FUNC_CTYPE_DECLARE(Berry_WiFi_Client_Class_Flush_A6E0711F_6250_40BD_90F5_07B740A5BD9E, "", ".");

int Berry_WiFi_Client_Class_Write_6E438B0B_C5CE_4BA3_B59F_05A37224D932(Xila_Namespace::Communication_Types::WiFi_Client_Class* I, int A_0)
{
return (int)I->Write((unsigned char)A_0); 
}
BE_FUNC_CTYPE_DECLARE(Berry_WiFi_Client_Class_Write_6E438B0B_C5CE_4BA3_B59F_05A37224D932, "i", ".i");

int Berry_WiFi_Client_Class_Write_Bytes_7216CEE5_BDBF_41D4_A8EA_D2639F378A77(Xila_Namespace::Communication_Types::WiFi_Client_Class* I, const unsigned char* A_0, int A_1)
{
return (int)I->Write_Bytes(A_0, (unsigned int)A_1); 
}
BE_FUNC_CTYPE_DECLARE(Berry_WiFi_Client_Class_Write_Bytes_7216CEE5_BDBF_41D4_A8EA_D2639F378A77, "i", ".si");

int Berry_WiFi_Client_Class_Write_String_58691240_C8B1_4965_95CF_1C0F03B19420(Xila_Namespace::Communication_Types::WiFi_Client_Class* I, const char* A_0)
{
return (int)I->Write_String(A_0); 
}
BE_FUNC_CTYPE_DECLARE(Berry_WiFi_Client_Class_Write_String_58691240_C8B1_4965_95CF_1C0F03B19420, "i", ".s");

// - - Operators
bool Berry_WiFi_Client_Class_Operator_AE76E3B1_2EDA_4F6B_A2AA_5818A1610AE1(Xila_Namespace::Communication_Types::WiFi_Client_Class* I, Xila_Namespace::Communication_Types::WiFi_Client_Class* A_0)
{
return *I == *A_0;
}
BE_FUNC_CTYPE_DECLARE(Berry_WiFi_Client_Class_Operator_AE76E3B1_2EDA_4F6B_A2AA_5818A1610AE1, "b", "..")

bool Berry_WiFi_Client_Class_Operator_6EEAF44B_20A2_4B4E_A789_FC695E533105(Xila_Namespace::Communication_Types::WiFi_Client_Class* I, Xila_Namespace::Communication_Types::WiFi_Client_Class* A_0)
{
return *I != *A_0;
}
BE_FUNC_CTYPE_DECLARE(Berry_WiFi_Client_Class_Operator_6EEAF44B_20A2_4B4E_A789_FC695E533105, "b", "..")


// - Berry declaration
/* @const_object_info_begin
class Berry_WiFi_Client_Type(scope:global, name:WiFi_Client_Type)
{
	_p, var
	init, ctype_func(Berry_WiFi_Client_Class_Initialize_A05A5517_71D0_463F_8DEA_A4E3DF5F2CCC)
	deinit, ctype_func(Berry_WiFi_Client_Class_Deinitialize_C011F7D5_2F69_4C74_A827_4B3F956BCD7A)
	Connect, ctype_func(Berry_WiFi_Client_Class_Connect_47CD7C33_1519_49E5_A8C6_4B2488AF4730)
	Stop, ctype_func(Berry_WiFi_Client_Class_Stop_8235CF00_0F49_4BFC_ADB5_3A835F0B4B6C)
	Connected, ctype_func(Berry_WiFi_Client_Class_Connected_F63FF722_66E3_4359_ADBD_0AEDE51AFCF5)
	Last_Error, ctype_func(Berry_WiFi_Client_Class_Last_Error_BA33CA71_421C_4737_A856_1B985E1AEB71)
	Set_Insecure, ctype_func(Berry_WiFi_Client_Class_Set_Insecure_E0090CEB_6AD8_48B1_8902_4BC7C4DB84D8)
	Set_Handshake_Timeout, ctype_func(Berry_WiFi_Client_Class_Set_Handshake_Timeout_1265ED47_0342_4FAA_884B_C1884DF12792)
	Set_Timeout, ctype_func(Berry_WiFi_Client_Class_Set_Timeout_C174F9C5_0DB1_49B1_A6E9_523A8AAF2C63)
	Available, ctype_func(Berry_WiFi_Client_Class_Available_23838321_8ABA_4B51_AC43_6F7D3EAB81EE)
	Peek, ctype_func(Berry_WiFi_Client_Class_Peek_97508EEA_44C9_4524_AD43_4B0B52D1B605)
	Read, ctype_func(Berry_WiFi_Client_Class_Read_DF8DE39F_E0E8_4AD0_A716_A62307F664AB)
	Read_Bytes, ctype_func(Berry_WiFi_Client_Class_Read_Bytes_B9437A56_4C24_4C19_948F_143F61342342)
	Read_String, ctype_func(Berry_WiFi_Client_Class_Read_String_57F0BA93_F289_4952_A464_34AA57B5C6FD)
	Flush, ctype_func(Berry_WiFi_Client_Class_Flush_A6E0711F_6250_40BD_90F5_07B740A5BD9E)
	Write, ctype_func(Berry_WiFi_Client_Class_Write_6E438B0B_C5CE_4BA3_B59F_05A37224D932)
	Write_Bytes, ctype_func(Berry_WiFi_Client_Class_Write_Bytes_7216CEE5_BDBF_41D4_A8EA_D2639F378A77)
	Write_String, ctype_func(Berry_WiFi_Client_Class_Write_String_58691240_C8B1_4965_95CF_1C0F03B19420)
	==, ctype_func(Berry_WiFi_Client_Class_Operator_AE76E3B1_2EDA_4F6B_A2AA_5818A1610AE1)
	!=, ctype_func(Berry_WiFi_Client_Class_Operator_6EEAF44B_20A2_4B4E_A789_FC695E533105)

}
@const_object_info_end */


extern "C"
{
	#include "../generate/be_fixed_Berry_WiFi_Client_Type.h"
}
// - Functions
int Berry_Communication_Class_Start_ED6C37C9_E752_4EA5_AC5E_B11318ADA3D5()
{
return (int)Communication.Start(); 
}
BE_FUNC_CTYPE_DECLARE(Berry_Communication_Class_Start_ED6C37C9_E752_4EA5_AC5E_B11318ADA3D5, "i", "");


int Berry_Communication_Class_Stop_66746F39_959D_4D78_AAE9_B8C27389689E()
{
return (int)Communication.Stop(); 
}
BE_FUNC_CTYPE_DECLARE(Berry_Communication_Class_Stop_66746F39_959D_4D78_AAE9_B8C27389689E, "i", "");


void* Berry_Communication_Class_Get_Pointer()
{
	return (Module_Type*)&Communication;
}
BE_FUNC_CTYPE_DECLARE(Berry_Communication_Class_Get_Pointer, "c", "")

// - Berry declaration
/* @const_object_info_begin
module Communication (scope:global)
{
	Start, ctype_func(Berry_Communication_Class_Start_ED6C37C9_E752_4EA5_AC5E_B11318ADA3D5)
	Stop, ctype_func(Berry_Communication_Class_Stop_66746F39_959D_4D78_AAE9_B8C27389689E)
	Get_Pointer, ctype_func(Berry_Communication_Class_Get_Pointer)

	IP_Address_Type, class(Berry_IP_Address_Type)

	HTTPS_Client_Type, class(Berry_HTTPS_Client_Type)

	WiFi_Client_Type, class(Berry_WiFi_Client_Type)

	HTTP_Code_Continue, int(100)
	HTTP_Code_Switching_Protocols, int(101)
	HTTP_Code_Processing, int(102)
	HTTP_Code_OK, int(200)
	HTTP_Code_Created, int(201)
	HTTP_Code_Accepted, int(202)
	HTTP_Code_Non_Authoritative_Information, int(203)
	HTTP_Code_No_Content, int(204)
	HTTP_Code_Reset_Content, int(205)
	HTTP_Code_Partial_Content, int(206)
	HTTP_Code_Multi_Status, int(207)
	HTTP_Code_Already_Reported, int(208)
	HTTP_Code_I_M_Used, int(226)
	HTTP_Code_Multiple_Choices, int(300)
	HTTP_Code_Moved_Permanently, int(301)
	HTTP_Code_Found, int(302)
	HTTP_Code_See_Other, int(303)
	HTTP_Code_Not_Modified, int(304)
	HTTP_Code_Use_Proxy, int(305)
	HTTP_Code_Temporary_Redirect, int(307)
	HTTP_Code_Permanent_Redirect, int(308)
	HTTP_Code_Bad_Request, int(400)
	HTTP_Code_Unauthorized, int(401)
	HTTP_Code_Payment_Required, int(402)
	HTTP_Code_Forbidden, int(403)
	HTTP_Code_Not_Found, int(404)
	HTTP_Code_Method_Not_Allowed, int(405)
	HTTP_Code_Not_Acceptable, int(406)
	HTTP_Code_Proxy_Authentication_Required, int(407)
	HTTP_Code_Request_Timeout, int(408)
	HTTP_Code_Conflict, int(409)
	HTTP_Code_Gone, int(410)
	HTTP_Code_Length_Required, int(411)
	HTTP_Code_Precondition_Failed, int(412)
	HTTP_Code_Payload_Too_Large, int(413)
	HTTP_Code_URI_Too_Long, int(414)
	HTTP_Code_Unsupported_Media_Type, int(415)
	HTTP_Code_Range_Not_Satisfiable, int(416)
	HTTP_Code_Expectation_Failed, int(417)
	HTTP_Code_Misdirected_Request, int(421)
	HTTP_Code_Unprocessable_Entity, int(422)
	HTTP_Code_Locked, int(423)
	HTTP_Code_Failed_Dependency, int(424)
	HTTP_Code_Upgrade_Required, int(426)
	HTTP_Code_Precondition_Required, int(428)
	HTTP_Code_Too_Many_Requests, int(429)
	HTTP_Code_Request_Header_Fields_Too_Large, int(431)
	HTTP_Code_Internal_Server_Error, int(500)
	HTTP_Code_Not_Implemented, int(501)
	HTTP_Code_Bad_Gateway, int(502)
	HTTP_Code_Service_Unavailable, int(503)
	HTTP_Code_Gateway_Timeout, int(504)
	HTTP_Code_HTTP_Version_Not_Supported, int(505)
	HTTP_Code_Variant_Also_Negotiates, int(506)
	HTTP_Code_Insufficient_Storage, int(507)
	HTTP_Code_Loop_Detected, int(508)
	HTTP_Code_Not_Extended, int(510)
	HTTP_Code_Network_Authentication_Required, int(511)

	Status_No_Shield, int(0)
	Status_Idle, int(1)
	Status_No_SSID_Available, int(2)
	Status_Scan_Completed, int(3)
	Status_Connected, int(4)
	Status_Connection_Failed, int(5)
	Status_Connection_Lost, int(6)
	Status_Disconnected, int(7)

	Mode_None, int(0)
	Mode_Station, int(1)
	Mode_Access_Point, int(2)
	Mode_Station_Access_Point, int(3)

	Authentication_Mode_Open, int(0)
	Authentication_Mode_WEP, int(1)
	Authentication_Mode_WPA_PSK, int(2)
	Authentication_Mode_WPA2_PSK, int(3)
	Authentication_Mode_WPA_WPA2_PSK, int(4)
	Authentication_Mode_WPA2_ENTERPRISE, int(5)
	Authentication_Mode_WPA3_PSK, int(6)
	Authentication_Mode_WPA2_WPA3_PSK, int(7)
	Authentication_Mode_WAPI_PSK, int(8)
	Authentication_Mode_MAX, int(9)

	WPA2_Authentication_Method_TLS, int(0)
	WPA2_Authentication_Method_PEAP, int(1)
	WPA2_Authentication_Method_TTLS, int(2)

}
@const_object_info_end */


extern "C"
{
	#include "../generate/be_fixed_Communication.h"
}